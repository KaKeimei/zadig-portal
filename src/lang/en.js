'use strict'

exports.__esModule = true
exports.default = {
  global: {
    add: 'Add',
    copy: 'Copy',
    edit: 'Edit',
    delete: 'Delete',
    confirm: 'Confirm',
    cancel: 'Cancel',
    save: 'Save',
    refresh: 'Refresh',
    creator: 'Creator',
    operation: 'Operation',
    successfullySaved: 'Successfully saved',
    helpDoc: 'help',
    desc: 'Description',
    type: 'Type',
    name: 'Name',
    tips: 'Tips',
    status: 'Status',
    serviceName: 'Service Name',
    realTimeLog: 'Real Time Log',
    inputDesc: 'Please input description',
    loading: 'Loading...',
    project: 'Project',
    workflow: 'Workflow'
  },
  login: {
    username: 'Username',
    password: 'Password',
    mail: 'mail',
    inputUsername: 'Please input username',
    inputPass: 'Please input password',
    inputMail: 'Please input mail',
    inputMailCheck: 'Please check the email format',
    inputUserInfo: 'Please input user info',
    inputNewPass: 'Please input new password',
    inputNewPassAgain: 'Please input new password again',
    passwordDontMatch: "Password don't match!",
    passwordLength: 'Password should be no less than 8 characters',
    signIn: 'Sign in',
    signUp: 'Sign up',
    forgotPassword: 'Forgot password',
    resetPassword: 'Reset password',
    resetSuccess: 'Reset successfully',
    confirmReset: 'Confirm reset',
    next: 'Next',
    resetLinkTip: 'The password reset link has been sent to your registered email address',
    setNewPassword: 'Set new password',
    sloganTitle: 'Let engineers focus more on creating',
    sloganDesc: 'The cloud-native continuous delivery platform engineers love: with important features such as flexible and easy-to-use high concurrency workflow, developer-oriented cloud-native environment, efficient and collaborative test management, powerful and maintenance-free template library, objective and accurate performance insights, and cloud-native IDE plugins to provide a unified collaboration plane for engineers.',
    companyInfo: 'KodeRover Technology Co., Ltd.'
  },
  signUp: {
    username: 'Username',
    password: 'Password',
    mail: 'mail',
    nickname: 'Nickname',
    inputUsername: 'Please input username',
    inputPass: 'Please input password',
    inputNickname: 'Please input nickname',
    inputMail: 'Please input mail',
    inputMailCheck: 'Please check the email format',
    inputUserInfo: 'Please input user info',
    signUp: 'Sign up',
    signUpSuccess: 'Registration is successful, please login'
  },
  sidebarMenu: {
    productDelivery: 'Product Delivery',
    status: 'Status',
    projects: 'Projects',
    forum: 'Forum',
    testCenter: 'Tests',
    deliveryCenter: 'Delivery',
    dataViews: 'Data Views',
    dataOverview: 'Overview',
    dataInsight: 'Insights',
    setting: 'Settings',
    sysSetting: 'System Setting',
    integration: 'Integrations',
    systemIntegration: 'Integrations',
    packages: 'Packages',
    images: 'Images',
    plugins: 'Plugins',
    infraIntegration: 'Infrastructure',
    dockerRegistry: 'Registry',
    objectStorage: 'Storage',
    helmRepo: 'HELM Repo',
    clusters: 'Clusters',
    hosts: 'Hosts',
    system: 'System',
    settings: 'Settings',
    users: 'Users',
    announcement: 'Announcement',
    auditLog: 'Audit Log',
    enterprise: 'Enterprise',
    enterpriseInfo: 'Enterprise Info',
    license: 'License',
    releaseCenter: 'Release',
    releaseWorkflows: 'Workflows',
    environmentGroups: 'Environments',
    customerDelivery: 'Customer Delivery',
    deliveryBoard: 'Board',
    deliveryVersion: 'Version',
    deliveryCustomers: 'Customers'
  },
  topbarMenu: {
    search: 'Search',
    username: 'Username',
    admin: 'Admin',
    user: 'User',
    users: 'Users',
    sysSetting: 'System Setting',
    enterprise: 'Enterprise',
    profile: 'Profile',
    signOut: 'Sign Out'
  },
  profile: {
    profile: 'Profile',
    changePassword: 'Change Password',
    oldPassword: 'Old password',
    newPassword: 'New password',
    confirmNewPassword: 'Confirm new password',
    changeMail: 'Change Mail',
    oldMail: 'Old mail',
    newMail: 'New mail',
    inputMail: 'Please input enterprise mail',
    pleaseCheckMail: 'Please check the email format',
    admin: 'Admin',
    user: 'User',
    lastAccessedOn: 'Last accessed on',
    source: 'Source',
    system: 'System',
    updatePassword: 'Update password',
    updateMail: 'Update mail',
    clickToChange: 'Click to change',
    notificationSetting: 'Notification setting',
    workflowStatusChanged: 'Workflow status changed',
    inputNewPass: 'Please input new password',
    inputOldPass: 'Please input old password',
    inputNewPassAgain: 'Please input new password again',
    passwordDontMatch: "Password don't match!",
    copiedToClipboard: 'Copied to clipboard',
    copyFailed: 'Copy failed',
    passwordChangedSuccessfully: 'Password changed successfully',
    notificationSettingSavedSuccessfully: 'Notification setting saved successfully'
  },
  project: {
    searchProject: 'Search Project',
    newProject: 'New project',
    templates: 'Templates',
    buildTemplate: 'Build',
    workflowTemplate: 'Workflow',
    editProject: 'Edit',
    deleteProject: 'Delete',
    privateProject: 'Private project',
    workflows: 'Workflows',
    environments: 'Environments',
    tests: 'Tests',
    services: 'Services',
    builds: 'Builds',
    codeScanner: 'Code Scanner',
    versions: 'Versions',
    artifacts: 'Artifacts',
    clusters: 'Clusters',
    noProjects: 'There is no item to show, please add',
    projectName: 'Name',
    projectIdentifier: 'Identifier',
    projectIdentifierTip: "The project identifier is a globally unique identifier of the project's resources, used for referencing and updating all resources under the project,automatically generated by default, supports manual editing, can't be changed after creation",
    type: 'Type',
    yamlProject: 'K8s YAML Project',
    yamlProjectFirstDesc: 'Kubernetes',
    yamlProjectSecondDesc: 'Managing and Deploying Services with Kubernetes YAML',
    helmProject: 'K8s Helm Chart Project',
    helmProjectFirstDesc: 'Kubernetes',
    helmProjectSecondDesc: 'Manage and deploy services with Helm Chart',
    hostingProject: 'K8s Hosting Project',
    hostingProjectFirstDesc: 'Hosting resources in existing Kubernetes clusters',
    hostingProjectSecondDesc: 'Service image updates are supported',
    hostsProject: 'Hosts Projects',
    hostsProjectFirstDesc: 'Using the cloud host',
    hostsProjectSecondDesc: 'Deploy and upgrade services using custom scripts',
    compatibility: 'Compatibility',
    advancedConfigurations: 'Advanced Configurations',
    accessPermission: 'Access',
    projectAdministrator: 'Administrator',
    private: 'Private',
    privateDesc: 'The project is not visible to normal users by default, project administrators can add members and configure the appropriate permissions.',
    public: 'Public',
    publicDesc: 'Users have public access by default to view workflows, environments, services, builds, tests, and other resources in the project.',
    inputUsernameToSearch: 'Please input name to search',
    selectCluster: 'Please select clusters',
    specifiedCluster: 'Clusters',
    confirmUpdate: 'Update',
    createNow: 'Create',
    inputProjectName: 'Please input project name',
    selectProjectAdmin: 'Please select project administrator',
    selectProjectAccessPermission: 'Please select permission',
    inputProjectIdentifier: 'Please input project identifier',
    inputProjectIdentifierCheck: 'Only lowercase letters and numbers are supported, and hyphens are supported in special characters',
    successfullySaved: 'Projects have been successfully created',
    successfullyUpdated: 'Projects have been successfully updated',
    environmentCounts: 'Environments',
    environmentsList: 'Environments',
    workflowsList: 'Workflows',
    workflowStage: 'Stages',
    lastUpdated: 'Last Updated',
    clusterInfo: 'Cluster',
    localCluster: 'Local',
    update: 'Update',
    projectDetail: 'Detail',
    createProject: 'Create Project',
    editProjectInfo: 'Edit Project',
    deleteProjectComp: {
      inputProjectNameToDelete: 'Please input project name {projectName} to confirm',
      deleteExternalProjectTip: 'The following resources under this project will be unhosted,',
      deleteProjectTip: 'The following resources under this project will be deleted at the same time,',
      deleteProjectCaution: 'please proceed with caution !!',
      deleteK8sNamespace: 'Delete the K8s namespace and services',
      projectNameDontMatch: 'Project name does not match',
      noResource: 'None',
      successfullyDeleted: 'Projects have been successfully deleted'
    }
  },
  workflowTaskStatus: {
    notRunning: 'Not running',
    created: 'Created',
    waiting: 'Waiting',
    running: 'Running',
    failed: 'Failed',
    passed: 'Passed',
    timeout: 'Timeout',
    cancelled: 'Cancelled',
    blocked: 'Blocked',
    queued: 'Queued',
    skipped: 'Skipped',
    prepare: 'Preparing',
    reject: 'Rejected'
  },
  workflow: {
    ascendingByName: 'Ascending by name',
    descendingByName: 'Descending by name',
    ascendingByCreationTime: 'Ascending by creation time',
    descendingByCreationTime: 'Descending by creation time',
    all: 'All',
    addView: 'Add View',
    editView: 'Edit View',
    delView: 'Delete View',
    searchWorkflow: 'Search Workflow',
    noWorkflow: 'There is currently no workflow to display, please create a new workflow manually',
    productWorkflow: 'Product Workflow',
    productWorkflowAbility: 'Capable of building, deploying, testing, and delivering versions with modular assembly',
    customWorkflow: 'Custom Workflow',
    customWorkflowAbility: 'Customizable workflow steps and free execution order',
    releaseWorkflow: 'Release Workflow',
    releaseWorkflowAbility: 'The release process can be freely arranged, with the capabilities of blue-green, canary, grayscale release, etc',
    chooseWorkflowType: 'Choose Workflow Type',
    runProductWorkflow: 'Run Product Workflow',
    runWorkflow: 'Run Workflow',
    viewName: 'View Name',
    inputViewName: 'Please input view name',
    selectWorkflow: 'Select Workflow',
    addEmptyWorkflow: 'Create a new blank workflow',
    use: 'Use',
    customWorkflowTemplate: 'Custom Workflow Template',
    releaseWorkflowTemplate: 'Release Workflow Template',
    builtInTemplate: 'Built-in Template',
    selectTemplate: 'Select Template',
    delWorkflow: 'Delete Workflow',
    confirmWorkflowName: 'Confirm Workflow Name',
    delSuccess: 'Delete Success',
    inputWorkflowName: 'Please input workflow name',
    nameMismatch: 'workflow name mismatch',
    cancelDel: 'Cancel Delete Workflow',
    newWorkflowName: 'New Workflow Name',
    newWorkflowID: 'New Workflow ID',
    copyWorkflow: 'Copy Workflow',
    cancelCopyWorkflow: 'Cancel Copy Workflow',
    copyWorkflowSuccess: 'Copy Workflow Success',
    duplicateWorkflowName: 'Duplicate Workflow Name',
    addSuccess: 'Add Success',
    updateSuccess: 'Update Success',
    delScuuess: 'Delete Success',
    run: 'Run',
    noAuth: 'Operation without permission',
    close: 'Close',
    open: 'Open',
    timer: 'Timer',
    timerOpenSuccess: 'Timer Open Success',
    timerCloseSuccess: 'Timer Close Success',
    inputWorkflowID: 'Please Input Workflow ID',
    custom: 'custom',
    release: 'release',
    product: 'product',
    recentSuccess: 'Recent Success',
    recentFail: 'Recent Fail',
    averageExecutionTime: 'Average Execution Time',
    successRate: 'Success Rate',
    cancelFavoriteSuccess: 'Cancel Favorite Success',
    addFavoriteSuccess: 'Add Favorite Success',
    customWorkflowsDonotSupportCollections: 'Custom workflows do not currently support collections!',
    releaseWorkflowsDonotSupportCollections: 'Release workflows do not currently support collections!',
    updateBy: 'Update By',
    lastModify: 'Last Modify',
    historyTask: 'History Task',
    runStatus: 'Run Status',
    duration: 'Duration',
    executor: 'Executor',
    codeInfo: 'Code Info',
    env: 'Environment',
    testResults: 'Test Results',
    clone: 'Clone',
    startTask: 'Start Task',
    var: 'Var',
    manualReview: 'Manual Review',
    key: 'Key',
    value: 'Value',
    workflowVars: 'Workflow Var',
    cancelSuccess: 'Cancel Success',
    jobType: {
      build: 'Build',
      deploy: 'Deploy',
      approval: 'Approval',
      freestyle: 'Common',
      plugin: 'Plugin',
      test: 'Test',
      scan: 'Scan',
      distribute: 'Image Distribute',
      customDeploy: 'Kubernetes Deploy',
      canaryDeploy: 'Canary Deploy',
      canaryConfirm: 'Canary Release',
      blueGreenDeploy: 'blue-green Deploy',
      blueGreenConfirm: 'blue-green Release',
      k8sResourcePatch: 'Kubernetes Resource Patch',
      k8sGrayRollback: 'Gray Rollback',
      grayDeploy: 'Gray Release',
      istioRelease: 'Istio Release',
      istioRollback: 'Istio Rollback'
    },
    errorMsg: 'Error Message',
    ok: 'ok',
    codeLibrary: 'Code Library',
    serviceName: 'Service Name',
    imageName: 'Image Name',
    deploymentEnv: 'Deployment Environment',
    serviceStatusCheck: 'Service Status Check',
    notOpenServiceStatusCheck: 'Service status detection is not enabled',
    serviceStatusCheckPassed: 'Service status check passed',
    serviceStatusCheckFailed: 'Service status check failed',
    scanName: 'Scan Name',
    link: 'Link',
    view: 'View',
    projectName: 'Project Name',
    testName: 'Test Name',
    fileExport: 'File Export',
    testReport: 'Test Report',
    download: 'Download',
    k8sServiceName: 'K8s Service Name',
    containerName: 'Container Name',
    cluster: 'Cluster',
    namespace: 'Namespace',
    time: 'Time',
    type: 'Type',
    message: 'Message',
    ui: 'UI',
    desc: 'description',
    jobName: 'Job Name',
    serviceComponent: 'Service Component',
    buildName: 'Build Name',
    buildConfig: 'Build Config',
    varConfig: 'Var Config',
    branchConfig: 'Branch Config',
    storageConfig: 'Storage Config',
    dockerRegistry: 'Docker Registry',
    sensitiveInformation: 'Sensitive Information',
    timeout: 'Timeout',
    containerStatusDetection: 'Container Status Detection',
    scanConfig: 'Scan Config',
    chooseScan: 'Choose Scan',
    grayPercentage: 'Gray Percentage',
    grayTaskType: 'Gray Task Type',
    resourceName: 'Resource Name',
    updateContent: 'Update Content',
    job: 'Job',
    stage: 'Stage'
  },
  sysSetting: {
    integration: {
      accountsTab: 'Accounts',
      projectTab: 'Project Management',
      gitProvidersTab: 'Git Providers',
      configsTab: 'Config Management',
      jenkinsTab: 'Jenkins',
      sonarTab: 'Sonar',
      otherSystemTab: 'Other System',
      gitProviders: {
        notIntegrated: 'The git provider has not yet been integrated, please integrate the git provider first and then continue.',
        provider: 'Provider',
        otherProvider: 'Other',
        giteeCE: 'Gitee(Community Edition)',
        giteeEE: 'Gitee(Enterprise Edition)',
        providerAlias: 'Alias',
        authStatus: 'Auth status',
        authSuccess: 'Success',
        authFailed: 'Failed',
        lastUpdated: 'Last updated',
        enableProxy: 'Enable proxy',
        editProvider: 'Edit',
        deleteProvider: 'Delete',
        tip: 'GitLab, GitHub, Gerrit, and Gitee integrations are supported,refer to the',
        addProviderTitle: 'Add Provider',
        editProviderTitle: 'Edit Provider',
        referToDoc: 'More configurations can be found in',
        appAuthCallbackTip: 'Callback address for application authorization:',
        appPermissionCheckTip: 'Please check the following permissions: ',
        otherProviderTipFirst: 'Support for standard Git protocol',
        otherProviderTipSecond: 'After integration, build/test templates can pull code from this provider',
        copyAddrSuccess: 'Copied to clipboard',
        copyAddrFailed: 'Copy failed',
        gitlabUrl: 'GitLab URL',
        gerritUrl: 'Gerrit URL',
        giteeUrl: 'Gitee URL',
        providerUrl: 'Provider URL',
        authMethod: 'Auth method',
        username: 'Username',
        password: 'Password',
        selectProvider: 'Please select provider',
        inputAddress: 'Please input URL, including the protocol',
        inputAccessToken: 'Please input access token',
        inputAppId: 'Please input client id',
        inputclientSecret: 'Please input client secret',
        inputUsername: 'Please input username',
        inputPass: 'Please input password',
        inputSSHKey: 'Please input SSH Key',
        inputPrivateAccessToken: 'Please input private access token',
        inputAlias: 'Please input alias',
        inputOtherProviderUrl: 'Please input provider URL',
        checkOtherProviderUrl: 'Please check the format',
        selectAuthMethod: 'Please select the authentication method',
        goToAuthorization: 'Go to authorize',
        proxyIsEnabled: 'Proxy is enabled',
        proxyIsDisabled: 'Proxy is disbaled',
        noProxy: 'No proxy configured, please go to "Settings" -> "Proxy Configuration" to configure proxy first!',
        proxyEnableFailed: 'Proxy configuration change faile:',
        getProxyConfigurationFailed: 'Failed to get proxy configuration:',
        confirmDeleteProvider: 'Are you sure to remove this provider?',
        deleteProviderSuccess: 'Provider has been removed',
        addProviderSuccess: 'Provider has been added',
        changeProviderInfoSuccess: 'Provider has been changed',
        changeProviderInfoSuccessAndGoToAuth: 'Provider has been changed,go to authorize'
      },
      accounts: {
        account: 'Account',
        accountType: 'Type',
        custom: 'Custom'
      }
    },
    packages: {
      addPackage: 'Add package',
      version: 'Version',
      versionExample: 'For example:1.0.0',
      enable: 'Enable',
      enableTooltip: 'Control whether packages are displayed in the package list, those in use are not affected',
      enableCurrentPackage: 'Enable current package',
      packageAddress: 'Package address',
      // eslint-disable-next-line no-template-curly-in-string
      packageAddressTooltip: 'The system automatically downloads and caches the installation package from the configuration address, which is available via the ${FILEPATH} variable',
      installScript: 'Install Script',
      editPackage: 'Edit package-{name} {version}',
      referToDoc: 'When running the build and test steps, install the necessary packages according to the actual business, for details, please refer to',
      enableProxy: 'Enable proxy',
      updateTime: 'Update Time',
      updator: 'Updator',
      inputPackageName: 'Please input package name',
      inputPackageVersion: 'Please input package version',
      inputInstallScript: 'Please input install script',
      inputPackageBinPath: 'Please input package bin path',
      addPackageSuccess: 'Add package successfully',
      addPackageFailed: 'Failed to add package',
      updatePackageSuccess: 'Update package successfully',
      updatePackageFailed: 'Failed to update package',
      packageHasBeenDeleted: 'Package has been deleted',
      cancelDelete: 'Deletion has been canceled',
      deleteTip: 'Deleting a package may affect the workflow being used, are you sure to delete the version {version} of {name}?',
      noProxy: 'No proxy configured, please go to "Settings" -> "Proxy Configuration" to configure proxy first!',
      proxyIsEnabled: 'Proxy is enabled',
      proxyIsDisabled: 'Proxy is disabled',
      changeProxyFailed: 'Failed to change proxy configuration:{error}',
      getProxyConfigurationFailed: 'Failed to get proxy configuration{error}'
    },
    images: {
      addImage: 'Add image',
      label: 'Label',
      imageName: 'Name',
      imageNamePlaceholder: 'repository address/namespace/name:label',
      editImage: 'Edit image',
      referToDoc: 'The project build, test and code scan can use a custom image as the base environment image, the custom image needs to add some necessary packages, for details, please refer to',
      inputLabel: 'Please input image label',
      inputImageName: 'Please input image name',
      deleteTip: 'Are you sure to delete the image {label}?',
      confirm: 'Confirm',
      imageHasBeenDeleted: 'Image has been deleted',
      addImageSuccess: 'Add image successfully',
      updateImageSuccess: 'Update image successfully'
    },
    plugins: {},
    registry: {},
    storage: {},
    helmRepo: {
      addHelmChartRepo: 'Add helm chart repo',
      editHelmChartRepo: 'Edit helm chart repo',
      urlPlaceholder: 'Please enter the URL starting with http/https/acr',
      repoName: 'Repo Name',
      inputRepoName: 'Please input repo name',
      username: 'Username',
      inputUsername: 'Please input username',
      inputPassword: 'Please input password',
      password: 'Password',
      referToDoc: 'Support the integration of self-built Harbor repository and Chart repository provided by Alibaba Cloud, Tencent Cloud, Huawei Cloud and other cloud vendors, for details, please refer to',
      lastModified: 'Last modified',
      protocolCheck: 'Please make sure the protocol starts with http/https/acr',
      inputUrl: 'Please input URL',
      deleteTip: 'Are you sure to delete the repo {repoName} ?',
      confirm: 'Confirm',
      repoHasBeenDeleted: 'Repo has been deleted',
      addRepoSuccess: 'Add repo successfully',
      updateRepoSuccess: 'Update repo successfully'
    },
    clusters: {},
    hosts: {},
    settings: {},
    users: {},
    announcement: {
      addAnnouncement: 'Add announcement',
      title: 'Title',
      priority: 'Priority',
      selectPriority: 'Please select priority',
      high: 'High',
      medium: 'Medium',
      low: 'Low',
      timeRange: 'Time Range',
      startTime: 'Start time',
      timeTo: 'To',
      endTime: 'End time',
      content: 'Content',
      editAnnouncement: 'Edit announcement',
      inputTitle: 'Please input title',
      inputContent: 'Please input content',
      selectStartTimeAndEndTime: 'Please select the start and end time',
      announcementHasBeenDeleted: 'Announcement has been deleted',
      addAnnouncementSuccess: 'Announcement has been successfully added',
      addAnnouncementFailed: 'Failed to add announcement',
      editAnnouncementSuccess: 'Announcement has been successfully edited',
      editAnnouncementFailed: 'Failed to edit announcement'
    },
    auditLog: {
      APIPayloadDialogTitle: 'API Payload: {time}',
      noPayload: 'No payload',
      selectType: 'Please select type',
      username: 'Username',
      project: 'Project',
      function: 'Function',
      statusCode: 'Status Code',
      inputKeyword: 'Please input keyword to search',
      search: 'Search',
      time: 'Time',
      detail: 'Detail',
      APIPayload: 'API Payload',
      searchCompleted: 'Search completed'
    }
  }
}
